name: API Deployment

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version Bump Type'
        required: true
        default: 'patch'
        type: choice
        options:
        - major
        - minor
        - patch
        - release
        - rc
        - beta
        - alpha
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: cnstr/api
          ref: main
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Rust and Cargo
        uses: dtolnay/rust-toolchain@stable

      - name: Update Crate versions and set build-time variables
        run: |
          cargo install cargo-release
          cargo release version --no-confirm -x -p api -p deploy $BUMP_TYPE
          echo "git_version=$(cargo read-manifest --manifest-path api/Cargo.toml | jq -r '.version')" >> $GITHUB_ENV
          echo "git_state=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "build_date=$(date --rfc-3339=date)" >> $GITHUB_ENV
        env:
          BUMP_TYPE: ${{ inputs.bump_type }}

      - name: Login to tale.me
        uses: docker/login-action@v2.1.0
        with:
          registry: tale.me
          username: bot-github
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build container image
        run: docker build -t tale.me/canister/api:$GIT_VERSION --build-arg BUILD_DATE=$BUILD_DATE --build-arg VERSION=$GIT_VERSION --build-arg GIT_STATE=$GIT_STATE .
        env:
          GIT_VERSION: ${{ env.git_version }}
          GIT_STATE: ${{ env.git_state }}
          BUILD_DATE: ${{ env.build_date }}

      - name: Push container image to tale.me
        run: docker push tale.me/canister/api:$GIT_VERSION
        env:
          GIT_VERSION: ${{ env.git_version }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: cnstr/api
          ref: main
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Kubernetes
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.26.0

      - name: Configure Rust and Cargo
        uses: dtolnay/rust-toolchain@stable

      - name: Install Rust dependencies and run deploy tool
        run: |
          cargo install cargo-release
          cargo install --path deploy
          cargo run --bin deploy --release
          cargo release version --no-confirm -x -p api -p deploy $BUMP_TYPE
          echo "git_version=$(cargo read-manifest --manifest-path api/Cargo.toml | jq -r '.version')" >> $GITHUB_ENV
        env:
          BUMP_TYPE: ${{ inputs.bump_type }}

      - name: Commit file changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore: update versions and manifests to ${{ env.git_version }}'
          commit_options: '--no-verify --signoff'
          file_pattern: 'Cargo.lock api/Cargo.toml deploy/Cargo.toml kubernetes/api.yaml'

      - name: Create Git tags and deploy Kubernetes manifests
        run: |
          cargo release tag --no-confirm -x -p api --tag-prefix ""
          cargo release push --no-confirm -x
          kubectl apply -f kubernetes/api.yaml

